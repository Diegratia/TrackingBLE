// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrackingBle.Data;

#nullable disable

namespace TrackingBle.Migrations
{
    [DbContext(typeof(TrackingBleDbContext))]
    [Migration("20250316234006_AddNewTables")]
    partial class AddNewTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrackingBle.Models.Domain.AlarmRecordTracking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("action");

                    b.Property<string>("Alarm")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("alarm_record_status");

                    b.Property<Guid>("ApplicationId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("application_id");

                    b.Property<string>("CancelBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("cancel_by");

                    b.Property<DateTime>("CancelTimestamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("cancel_timestamp");

                    b.Property<string>("DoneBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("done_by");

                    b.Property<DateTime>("DoneTimestamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("done_timestamp");

                    b.Property<Guid>("FloorplanMaskedAreaId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("floorplan_masked_area_id");

                    b.Property<Guid?>("FloorplanMaskedAreaId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("_generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Generate"));

                    b.Property<string>("IdleBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("idle_by");

                    b.Property<DateTime>("IdleTimestamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("idle_timestamp");

                    b.Property<string>("InvestigatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("investigated_by");

                    b.Property<DateTime>("InvestigatedDoneAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("investigated_done_at");

                    b.Property<string>("InvestigatedResult")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("investigated_result");

                    b.Property<DateTime>("InvestigatedTimestamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("investigated_timestamp");

                    b.Property<Guid?>("MstBleReaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReaderId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ble_reader_id");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("timestamp");

                    b.Property<Guid>("VisitorId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("visitor");

                    b.Property<Guid?>("VisitorId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WaitingBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("waiting_by");

                    b.Property<DateTime>("WaitingTimestamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("waiting_timestamp");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId")
                        .IsUnique();

                    b.HasIndex("FloorplanMaskedAreaId")
                        .IsUnique();

                    b.HasIndex("FloorplanMaskedAreaId1");

                    b.HasIndex("Generate")
                        .IsUnique()
                        .HasDatabaseName("alarm_record_tracking__generate_unique");

                    b.HasIndex("MstBleReaderId");

                    b.HasIndex("ReaderId")
                        .IsUnique();

                    b.HasIndex("VisitorId")
                        .IsUnique();

                    b.HasIndex("VisitorId1");

                    b.ToTable("alarm_record_tracking", (string)null);
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.FloorplanDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("AccessCctvId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("access_cctv_id");

                    b.Property<Guid>("AccessControlId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("access_control_id");

                    b.Property<Guid>("ApplicationId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("application_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("created_by");

                    b.Property<string>("DeviceStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("device_status");

                    b.Property<Guid>("FloorplanId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("floorplan_id");

                    b.Property<Guid>("FloorplanMaskedAreaId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("floorplan_masked_area_id");

                    b.Property<Guid?>("FloorplanMaskedAreaId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("_generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Generate"));

                    b.Property<Guid?>("MstAccessCctvId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MstAccessControlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MstApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MstBleReaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<long>("PosPxX")
                        .HasColumnType("bigint")
                        .HasColumnName("pos_px_x");

                    b.Property<long>("PosPxY")
                        .HasColumnType("bigint")
                        .HasColumnName("pos_px_y");

                    b.Property<decimal>("PosX")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("pos_x");

                    b.Property<decimal>("PosY")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("pos_y");

                    b.Property<Guid>("ReaderId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ble_reader_id");

                    b.Property<int?>("Status")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("type");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("AccessCctvId");

                    b.HasIndex("AccessControlId");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("FloorplanId");

                    b.HasIndex("FloorplanMaskedAreaId");

                    b.HasIndex("FloorplanMaskedAreaId1");

                    b.HasIndex("Generate")
                        .IsUnique();

                    b.HasIndex("MstAccessCctvId");

                    b.HasIndex("MstAccessControlId");

                    b.HasIndex("MstApplicationId");

                    b.HasIndex("MstBleReaderId");

                    b.HasIndex("ReaderId");

                    b.ToTable("floorplan_device", (string)null);
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.FloorplanMaskedArea", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AreaShape")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorArea")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EngineAreaId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("FloorId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FloorplanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<Guid?>("MstFloorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("PositionPxX")
                        .HasColumnType("bigint");

                    b.Property<long>("PositionPxY")
                        .HasColumnType("bigint");

                    b.Property<string>("RestrictedStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("WideArea")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FloorId");

                    b.HasIndex("FloorplanId");

                    b.HasIndex("MstFloorId");

                    b.ToTable("floorplan_masked_area", (string)null);
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstAccessCctv", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Generate"));

                    b.Property<Guid>("IntegrationId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MstApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Rtsp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("IntegrationId");

                    b.HasIndex("MstApplicationId");

                    b.ToTable("mst_access_cctv", (string)null);
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstAccessControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ControllerBrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoorId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Generate"));

                    b.Property<Guid>("IntegrationId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MstApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Raw")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("ControllerBrandId");

                    b.HasIndex("IntegrationId");

                    b.HasIndex("MstApplicationId");

                    b.ToTable("mst_access_control", (string)null);
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationCustomDomain")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ApplicationCustomName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ApplicationCustomPort")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ApplicationExpired")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ApplicationRegistered")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ApplicationStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("ApplicationType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("");

                    b.Property<long>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Generate"));

                    b.Property<string>("HostAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HostEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HostName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HostPhone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LicenseCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LicenseType")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OrganizationAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("Single");

                    b.HasKey("Id");

                    b.ToTable("mst_application", (string)null);
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstBleReader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EngineReaderId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("LocationPxX")
                        .HasColumnType("bigint");

                    b.Property<long>("LocationPxY")
                        .HasColumnType("bigint");

                    b.Property<decimal>("LocationX")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LocationY")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Mac")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("MstBrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("MstBrandId");

                    b.ToTable("mst_ble_reader", (string)null);
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstBrand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Status")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("mst_brand", (string)null);
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstBuilding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("ApplicationId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("application_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("created_by");

                    b.Property<long>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("_generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Generate"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image");

                    b.Property<Guid?>("MstApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MstBuildingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("Generate")
                        .IsUnique();

                    b.HasIndex("MstApplicationId");

                    b.HasIndex("MstBuildingId");

                    b.ToTable("mst_building", (string)null);
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DepartmentHost")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<Guid?>("MstApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("MstApplicationId");

                    b.ToTable("mst_department", (string)null);
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstDistrict", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DistrictHost")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<Guid?>("MstApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("MstApplicationId");

                    b.ToTable("mst_district", (string)null);
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstFloor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BuildingId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("EngineFloorId")
                        .HasColumnType("bigint");

                    b.Property<string>("FloorImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FloorX")
                        .HasColumnType("bigint");

                    b.Property<long>("FloorY")
                        .HasColumnType("bigint");

                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<decimal>("MeterPerPx")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PixelX")
                        .HasColumnType("bigint");

                    b.Property<long>("PixelY")
                        .HasColumnType("bigint");

                    b.Property<int?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("mst_floor", (string)null);
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstFloorplan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("ApplicationId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("application_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("created_by");

                    b.Property<Guid>("FloorId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("floor_id");

                    b.Property<long>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("_generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Generate"));

                    b.Property<Guid?>("MstApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MstFloorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("FloorId");

                    b.HasIndex("Generate")
                        .IsUnique();

                    b.HasIndex("MstApplicationId");

                    b.HasIndex("MstFloorId");

                    b.ToTable("mst_floorplan", (string)null);
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstIntegration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApiAuthPasswd")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ApiAuthUsername")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ApiKeyField")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ApiKeyValue")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ApiTypeAuth")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ApiUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ApplicationId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<string>("IntegrationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("MstBrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("BrandId");

                    b.HasIndex("MstBrandId");

                    b.ToTable("mst_integration", (string)null);
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ApplicationId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("BleCardNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("DepartmentId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DistrictId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly>("ExitDate")
                        .HasColumnType("date");

                    b.Property<string>("FaceImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Generate"));

                    b.Property<string>("HeadMember1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HeadMember2")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("IdentityId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly>("JoinDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("MstApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MstDepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MstDistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MstOrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("OrganizationId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PersonId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("StatusEmployee")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UploadFr")
                        .HasColumnType("int");

                    b.Property<string>("UploadFrError")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("Email");

                    b.HasIndex("MstApplicationId");

                    b.HasIndex("MstDepartmentId");

                    b.HasIndex("MstDistrictId");

                    b.HasIndex("MstOrganizationId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PersonId");

                    b.ToTable("mst_member", (string)null);
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstOrganization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<Guid?>("MstApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OrganizationHost")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("MstApplicationId");

                    b.ToTable("mst_organization", (string)null);
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.TrackingTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlarmStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("Battery")
                        .HasColumnType("bigint");

                    b.Property<long>("CardId")
                        .HasColumnType("bigint");

                    b.Property<long>("CoordinatePxX")
                        .HasColumnType("bigint");

                    b.Property<long>("CoordinatePxY")
                        .HasColumnType("bigint");

                    b.Property<decimal>("CoordinateX")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CoordinateY")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("FloorplanMaskedAreaId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FloorplanMaskedAreaId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MstBleReaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReaderId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TransTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FloorplanMaskedAreaId");

                    b.HasIndex("FloorplanMaskedAreaId1");

                    b.HasIndex("MstBleReaderId");

                    b.HasIndex("ReaderId");

                    b.ToTable("tracking_transaction", (string)null);
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.Visitor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ApplicationId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BleCardNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("BlockBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CheckinBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CheckoutBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DenyBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FaceImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Generate"));

                    b.Property<string>("IdentityId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("MstApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PersonId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("PortalKey")
                        .HasColumnType("bigint");

                    b.Property<string>("ReasonBlock")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ReasonDeny")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ReasonUnblock")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("TimestampBlocked")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimestampCheckedIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimestampCheckedOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimestampDeny")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimestampPreRegistration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimestampUnblocked")
                        .HasColumnType("datetime2");

                    b.Property<string>("UnblockBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UploadFr")
                        .HasColumnType("int");

                    b.Property<string>("UploadFrError")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VisitorArrival")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VisitorEnd")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("Email");

                    b.HasIndex("MstApplicationId");

                    b.HasIndex("PersonId");

                    b.ToTable("visitor", (string)null);
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.VisitorBlacklistArea", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FloorplanMaskedAreaId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FloorplanMaskedAreaId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Generate"));

                    b.Property<Guid>("VisitorId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VisitorId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FloorplanMaskedAreaId");

                    b.HasIndex("FloorplanMaskedAreaId1");

                    b.HasIndex("VisitorId");

                    b.HasIndex("VisitorId1");

                    b.ToTable("visitor_blacklist_area", (string)null);
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.AlarmRecordTracking", b =>
                {
                    b.HasOne("TrackingBle.Models.Domain.MstApplication", "Application")
                        .WithOne("AlarmRecordTracking")
                        .HasForeignKey("TrackingBle.Models.Domain.AlarmRecordTracking", "ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.FloorplanMaskedArea", "FloorplanMaskedArea")
                        .WithOne("AlarmRecordTracking")
                        .HasForeignKey("TrackingBle.Models.Domain.AlarmRecordTracking", "FloorplanMaskedAreaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.FloorplanMaskedArea", null)
                        .WithMany("AlarmRecordTrackings")
                        .HasForeignKey("FloorplanMaskedAreaId1");

                    b.HasOne("TrackingBle.Models.Domain.MstBleReader", null)
                        .WithMany("AlarmRecordTrackings")
                        .HasForeignKey("MstBleReaderId");

                    b.HasOne("TrackingBle.Models.Domain.MstBleReader", "Reader")
                        .WithOne("AlarmRecordTracking")
                        .HasForeignKey("TrackingBle.Models.Domain.AlarmRecordTracking", "ReaderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.Visitor", "Visitor")
                        .WithOne("AlarmRecordTracking")
                        .HasForeignKey("TrackingBle.Models.Domain.AlarmRecordTracking", "VisitorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.Visitor", null)
                        .WithMany("AlarmRecordTrackings")
                        .HasForeignKey("VisitorId1");

                    b.Navigation("Application");

                    b.Navigation("FloorplanMaskedArea");

                    b.Navigation("Reader");

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.FloorplanDevice", b =>
                {
                    b.HasOne("TrackingBle.Models.Domain.MstAccessCctv", "AccessCctv")
                        .WithMany()
                        .HasForeignKey("AccessCctvId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstAccessControl", "AccessControl")
                        .WithMany()
                        .HasForeignKey("AccessControlId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstApplication", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstFloorplan", "Floorplan")
                        .WithMany("FloorplanDevices")
                        .HasForeignKey("FloorplanId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.FloorplanMaskedArea", "FloorplanMaskedArea")
                        .WithMany()
                        .HasForeignKey("FloorplanMaskedAreaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.FloorplanMaskedArea", null)
                        .WithMany("FloorplanDevices")
                        .HasForeignKey("FloorplanMaskedAreaId1");

                    b.HasOne("TrackingBle.Models.Domain.MstAccessCctv", null)
                        .WithMany("FloorplanDevices")
                        .HasForeignKey("MstAccessCctvId");

                    b.HasOne("TrackingBle.Models.Domain.MstAccessControl", null)
                        .WithMany("FloorplanDevices")
                        .HasForeignKey("MstAccessControlId");

                    b.HasOne("TrackingBle.Models.Domain.MstApplication", null)
                        .WithMany("FloorplanDevices")
                        .HasForeignKey("MstApplicationId");

                    b.HasOne("TrackingBle.Models.Domain.MstBleReader", null)
                        .WithMany("FloorplanDevices")
                        .HasForeignKey("MstBleReaderId");

                    b.HasOne("TrackingBle.Models.Domain.MstBleReader", "Reader")
                        .WithMany()
                        .HasForeignKey("ReaderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AccessCctv");

                    b.Navigation("AccessControl");

                    b.Navigation("Application");

                    b.Navigation("Floorplan");

                    b.Navigation("FloorplanMaskedArea");

                    b.Navigation("Reader");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.FloorplanMaskedArea", b =>
                {
                    b.HasOne("TrackingBle.Models.Domain.MstFloor", "Floor")
                        .WithMany()
                        .HasForeignKey("FloorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstFloorplan", "Floorplan")
                        .WithMany("FloorplanMaskedAreas")
                        .HasForeignKey("FloorplanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstFloor", null)
                        .WithMany("FloorplanMaskedAreas")
                        .HasForeignKey("MstFloorId");

                    b.Navigation("Floor");

                    b.Navigation("Floorplan");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstAccessCctv", b =>
                {
                    b.HasOne("TrackingBle.Models.Domain.MstApplication", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstIntegration", "Integration")
                        .WithMany()
                        .HasForeignKey("IntegrationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstApplication", null)
                        .WithMany("AccessCctvs")
                        .HasForeignKey("MstApplicationId");

                    b.Navigation("Application");

                    b.Navigation("Integration");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstAccessControl", b =>
                {
                    b.HasOne("TrackingBle.Models.Domain.MstApplication", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstBrand", "Brand")
                        .WithMany()
                        .HasForeignKey("ControllerBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstIntegration", "Integration")
                        .WithMany()
                        .HasForeignKey("IntegrationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstApplication", null)
                        .WithMany("AccessControls")
                        .HasForeignKey("MstApplicationId");

                    b.Navigation("Application");

                    b.Navigation("Brand");

                    b.Navigation("Integration");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstBleReader", b =>
                {
                    b.HasOne("TrackingBle.Models.Domain.MstBrand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstBrand", null)
                        .WithMany("BleReaders")
                        .HasForeignKey("MstBrandId");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstBuilding", b =>
                {
                    b.HasOne("TrackingBle.Models.Domain.MstApplication", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstApplication", null)
                        .WithMany("Buildings")
                        .HasForeignKey("MstApplicationId");

                    b.HasOne("TrackingBle.Models.Domain.MstBuilding", null)
                        .WithMany("Buildings")
                        .HasForeignKey("MstBuildingId");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstDepartment", b =>
                {
                    b.HasOne("TrackingBle.Models.Domain.MstApplication", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstApplication", null)
                        .WithMany("Departments")
                        .HasForeignKey("MstApplicationId");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstDistrict", b =>
                {
                    b.HasOne("TrackingBle.Models.Domain.MstApplication", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstApplication", null)
                        .WithMany("Districts")
                        .HasForeignKey("MstApplicationId");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstFloor", b =>
                {
                    b.HasOne("TrackingBle.Models.Domain.MstBuilding", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstFloorplan", b =>
                {
                    b.HasOne("TrackingBle.Models.Domain.MstApplication", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstFloor", "Floor")
                        .WithMany()
                        .HasForeignKey("FloorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstApplication", null)
                        .WithMany("Floorplans")
                        .HasForeignKey("MstApplicationId");

                    b.HasOne("TrackingBle.Models.Domain.MstFloor", null)
                        .WithMany("Floorplans")
                        .HasForeignKey("MstFloorId");

                    b.Navigation("Application");

                    b.Navigation("Floor");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstIntegration", b =>
                {
                    b.HasOne("TrackingBle.Models.Domain.MstApplication", "Application")
                        .WithMany("Integrations")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstBrand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstBrand", null)
                        .WithMany("Integrations")
                        .HasForeignKey("MstBrandId");

                    b.Navigation("Application");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstMember", b =>
                {
                    b.HasOne("TrackingBle.Models.Domain.MstApplication", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstDepartment", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstDistrict", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstApplication", null)
                        .WithMany("Members")
                        .HasForeignKey("MstApplicationId");

                    b.HasOne("TrackingBle.Models.Domain.MstDepartment", null)
                        .WithMany("Members")
                        .HasForeignKey("MstDepartmentId");

                    b.HasOne("TrackingBle.Models.Domain.MstDistrict", null)
                        .WithMany("Members")
                        .HasForeignKey("MstDistrictId");

                    b.HasOne("TrackingBle.Models.Domain.MstOrganization", null)
                        .WithMany("Members")
                        .HasForeignKey("MstOrganizationId");

                    b.HasOne("TrackingBle.Models.Domain.MstOrganization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Department");

                    b.Navigation("District");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstOrganization", b =>
                {
                    b.HasOne("TrackingBle.Models.Domain.MstApplication", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstApplication", null)
                        .WithMany("Organizations")
                        .HasForeignKey("MstApplicationId");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.TrackingTransaction", b =>
                {
                    b.HasOne("TrackingBle.Models.Domain.FloorplanMaskedArea", "FloorplanMaskedArea")
                        .WithMany()
                        .HasForeignKey("FloorplanMaskedAreaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.FloorplanMaskedArea", null)
                        .WithMany("TrackingTransactions")
                        .HasForeignKey("FloorplanMaskedAreaId1");

                    b.HasOne("TrackingBle.Models.Domain.MstBleReader", null)
                        .WithMany("TrackingTransactions")
                        .HasForeignKey("MstBleReaderId");

                    b.HasOne("TrackingBle.Models.Domain.MstBleReader", "Reader")
                        .WithMany()
                        .HasForeignKey("ReaderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FloorplanMaskedArea");

                    b.Navigation("Reader");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.Visitor", b =>
                {
                    b.HasOne("TrackingBle.Models.Domain.MstApplication", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.MstApplication", null)
                        .WithMany("Visitors")
                        .HasForeignKey("MstApplicationId");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.VisitorBlacklistArea", b =>
                {
                    b.HasOne("TrackingBle.Models.Domain.FloorplanMaskedArea", "FloorplanMaskedArea")
                        .WithMany()
                        .HasForeignKey("FloorplanMaskedAreaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.FloorplanMaskedArea", null)
                        .WithMany("BlacklistAreas")
                        .HasForeignKey("FloorplanMaskedAreaId1");

                    b.HasOne("TrackingBle.Models.Domain.Visitor", "Visitor")
                        .WithMany()
                        .HasForeignKey("VisitorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrackingBle.Models.Domain.Visitor", null)
                        .WithMany("BlacklistAreas")
                        .HasForeignKey("VisitorId1");

                    b.Navigation("FloorplanMaskedArea");

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.FloorplanMaskedArea", b =>
                {
                    b.Navigation("AlarmRecordTracking")
                        .IsRequired();

                    b.Navigation("AlarmRecordTrackings");

                    b.Navigation("BlacklistAreas");

                    b.Navigation("FloorplanDevices");

                    b.Navigation("TrackingTransactions");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstAccessCctv", b =>
                {
                    b.Navigation("FloorplanDevices");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstAccessControl", b =>
                {
                    b.Navigation("FloorplanDevices");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstApplication", b =>
                {
                    b.Navigation("AccessCctvs");

                    b.Navigation("AccessControls");

                    b.Navigation("AlarmRecordTracking")
                        .IsRequired();

                    b.Navigation("Buildings");

                    b.Navigation("Departments");

                    b.Navigation("Districts");

                    b.Navigation("FloorplanDevices");

                    b.Navigation("Floorplans");

                    b.Navigation("Integrations");

                    b.Navigation("Members");

                    b.Navigation("Organizations");

                    b.Navigation("Visitors");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstBleReader", b =>
                {
                    b.Navigation("AlarmRecordTracking")
                        .IsRequired();

                    b.Navigation("AlarmRecordTrackings");

                    b.Navigation("FloorplanDevices");

                    b.Navigation("TrackingTransactions");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstBrand", b =>
                {
                    b.Navigation("BleReaders");

                    b.Navigation("Integrations");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstBuilding", b =>
                {
                    b.Navigation("Buildings");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstDepartment", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstDistrict", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstFloor", b =>
                {
                    b.Navigation("FloorplanMaskedAreas");

                    b.Navigation("Floorplans");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstFloorplan", b =>
                {
                    b.Navigation("FloorplanDevices");

                    b.Navigation("FloorplanMaskedAreas");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.MstOrganization", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("TrackingBle.Models.Domain.Visitor", b =>
                {
                    b.Navigation("AlarmRecordTracking")
                        .IsRequired();

                    b.Navigation("AlarmRecordTrackings");

                    b.Navigation("BlacklistAreas");
                });
#pragma warning restore 612, 618
        }
    }
}
